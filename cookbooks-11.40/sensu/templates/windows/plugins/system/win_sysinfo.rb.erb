# system default plugin
# cup mem value to windows
# code dn365
# v0.01

require 'rubygems' if RUBY_VERSION < '1.9.0'
require 'sensu-plugin/metric/cli'
require 'socket'
require "ruby-wmi"

$VERBOSE = nil
class SystemInfo < Sensu::Plugin::Metric::CLI::Graphite

  option :scheme,
    :description => "Metric naming scheme, text to prepend to .$parent.$child",
    :long => "--scheme SCHEME",
    :default => "#{Socket.gethostname}"
    
    
  def cpu_procent
    proces = WMI::Win32_Processor.find(:all)
    cpu_total = 0
    index = 0
    proces.each do |proc|
      cpu_total += proc.LoadPercentage
      index += 1
    end
    cpu_used = cpu_total / index
    return cpu_used
  end
  
  def mem_procent
    memprocs = WMI::Win32_PerfRawData_PerfOS_Memory.find(:first)
    mem_avai = memprocs.AvailableMBytes.to_i
    mem_total = 0
    WMI::Win32_PhysicalMemory.find(:all).each{|mp| mem_total += (mp.Capacity.to_i / (1024*1024)) }
    mem_used = 100 - (mem_avai.to_f / mem_total) * 100
    mem = sprintf("%.1f",mem_used)
    return mem
  end
    
  def run
    
    win_cpu = cpu_procent
    win_mem = mem_procent
    timestamp = Time.now.to_i
    metrics = {
      :cpu => {
        :user => win_cpu
      },
      :memory => {
        :mem_used => win_mem
      }
    }
    metrics.each do |parent, children|
      children.each do |child, value|
        output [config[:scheme], parent, child].join("."), value, timestamp
      end
    end
    ok
  end
end