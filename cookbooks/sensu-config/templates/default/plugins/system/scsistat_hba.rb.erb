#!/usr/bin/env ruby
#
# System scsistat_hba Plugin
# this plugin support aix5.3 aix6.1 hpux11.31
# ===
# code dn365
# v 0.02

require 'rubygems' if RUBY_VERSION < '1.9.0'
require 'sensu-plugin/metric/cli'
require 'socket'
require 'rbconfig'

$VERBOSE = nil
class Hba < Sensu::Plugin::Metric::CLI::Graphite

  option :scheme,
    :description => "Metric naming scheme, text to prepend to .$parent.$child",
    :long => "--scheme SCHEME",
    :default => "#{Socket.gethostname}.hba"

  def sprintf_int(num)
    num = 0 unless num
    sprintf("%.01f", num)
  end

  def aix_hba
    hba_cmd = %x[/etc/sensu/plugins/scsistat]
    arry,metrics_arry = [],[]
    hba_cmd.each_line {|i| arry << i.chomp unless i.chomp.split(",")[0] == "FCNAME"}
    unless arry.empty?
      arry.map do |i|
        fcs_name = i.split(",")[0]
        iops = i.split(",")[1]
        rmbs = i.split(",")[2].to_i / 2048.to_f
        wmbs = i.split(",")[3].to_i / 2048.to_f
        metrics_arry << [fcs_name,{:iops => sprintf_int(iops),:rmbs => sprintf_int(rmbs),:wmbs => sprintf_int(wmbs)}]
      end
    end
    return Hash[metrics_arry]
  end

  def hpux_hba
    hba_cmd = %x[sar -H 1 2]
    arry,metrics_arry = [],[]
    hba_cmd.each_line {|i| arry << i.chomp unless i.chomp.empty? or i.chomp.split(" ")[0] != "Average" or !i.chomp.split(" ")[1].include?("fcd") }
    unless arry.empty?
      arry.map do |i|
       fcs_name = "fcs" + i.split(" ")[1].scan(/\d+/).join("").to_s
       metrics_arry << [fcs_name,{:iops => i.split(" ")[4],:rmbs => i.split(" ")[7],:wmbs => i.split(" ")[8]}]
      end
    end
    return Hash[metrics_arry]
  end

  def run
    dname = "system"
    dir_name = "hba"
    timestamp = Time.now.to_i
    uname = RbConfig::CONFIG['host_os']
    metrics = {}
    case uname
    when /aix+(5.3|6.1)/
      metrics = aix_hba
    when /hpux11.31/
      metrics = hpux_hba
    end
    metrics.each do |parent, children|
      children.each do |child, value|
        output ["<%= node["node"]["app"] %>", config[:scheme], dname, dir_name, parent, child].join("."), value, timestamp
      end
    end
    ok
  end
end

