#!/usr/bin/env ruby
#
# System hpux-ruby memory Plugin
# ===
#
# This plugin uses vmstat to collect basic system metrics, produces
# Graphite formated output.
#
# Copyright 2011 Sonian, Inc <chefs@sonian.net>
#
# Released under the same terms as Sensu (the MIT license); see LICENSE
# for details.

require 'rubygems' if RUBY_VERSION < '1.9.0'
require 'sensu-plugin/metric/cli'
require 'socket'

class RubyMemory < Sensu::Plugin::Metric::CLI::Graphite

  option :scheme,
    :description => "Metric naming scheme, text to prepend to .$parent.$child",
    :long => "--scheme SCHEME",
    :default => "#{Socket.gethostname}.rubymemory"

  def run
    dname = "system"

    pid = File.read("/var/run/sensu-client.pid").to_i
    result = %x[pmap #{pid} | tail -2 | head -1].chomp.strip.split(" ")
    vsz_value = result[0] ? result[0].gsub(/M/,"") : 0
    rsz_value = result[1] ? result[1].gsub(/M/,"") : 0
    timestamp = Time.now.to_i
    metrics = {
      :ruby_memory => {
        :vsz_total => vsz_value,
        :rsz_total => rsz_value
       }
    }
    
    `/sbin/init.d/sensu_client restart` if metrics[:ruby_memory][:vsz_total].to_i > 150 || metrics[:ruby_memory][:rsz_total].to_i > 100  
    metrics.each do |parent, children|
      children.each do |child, value|      
        output ["<%= @path %>", config[:scheme], dname, parent, child].join("."), value, timestamp
      end
    end
    ok
  end

end
